<?xml version='1.0' encoding='utf-8'?>
<!-- fix_html.xsl -->

<!-- ============================================ -->
<!-- FixHTML(InputString)                         -->
<!-- creates FOP equivalent from a subset of HTML -->
<!-- ============================================ -->

<!--
    params:
    ($InputString)

    local vars set:
    headStart, headEnd, break, beforeEnd

    XPath 1.0 functions called:
    substring-after, substring-before(), contains(), string-length(), not()

    templates called:
    [FixHTML]
-->

<xsl:template name="FixHTML"
              xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
              xmlns:fo="http://www.w3.org/1999/XSL/Format">

    <!-- params -->
    <xsl:param name="InputString"/>

    <!-- variables -->
    <xsl:variable name="headStart">
      <xsl:text>&lt;h2&gt;</xsl:text>
    </xsl:variable>

    <xsl:variable name="headEnd">
      <xsl:text>&lt;/h2&gt;</xsl:text>
    </xsl:variable>

    <xsl:variable name="break">
      <xsl:text>&lt;br/&gt;</xsl:text>
    </xsl:variable>

    <!-- content -->
    <!-- what to do -->
    <xsl:choose>

      <!-- Case 1: Make a header -->
      <xsl:when test="(contains($InputString,$headEnd) and string-length(substring-before($InputString,$headEnd)) &lt; string-length(substring-before($InputString,$break))) or (not(contains($InputString,$break))and contains($InputString,$headEnd))">
        <xsl:variable name="beforeEnd" select="substring-before($InputString,$headEnd)"/>

        <fo:block font-weight="bold">
          <xsl:value-of select="substring-after($beforeEnd,$headStart)"/>
        </fo:block>

        <xsl:call-template name="FixHTML">
          <xsl:with-param name="InputString">
            <xsl:value-of select="substring-after($InputString,$headEnd)"/>
          </xsl:with-param>
        </xsl:call-template>
      </xsl:when>

      <!-- Case 2: Make a newline -->
      <xsl:when test="contains($InputString,$break)">
        <xsl:if test="string-length(substring-before($InputString,$break))=0">
          <fo:block>&#160;</fo:block>
        </xsl:if>

        <fo:block>
          <xsl:value-of select="substring-before($InputString,$break)"/>
        </fo:block>

        <xsl:call-template name="FixHTML">
          <xsl:with-param name="InputString">
            <xsl:value-of select="substring-after($InputString,$break)"/>
          </xsl:with-param>
        </xsl:call-template>
      </xsl:when>

      <!-- Case 3: If no headers or breaks left in string, display all -->
      <xsl:otherwise>
        <fo:block>
          <xsl:value-of select="$InputString"/>
        </fo:block>
      </xsl:otherwise>

    </xsl:choose>

</xsl:template>
