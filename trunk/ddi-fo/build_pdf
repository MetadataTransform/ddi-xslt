#!/bin/sh

# Simple build script for turning DDI Codebook into PDF
# 2013-04-25	Initial version
# 2013-04-26	Better file extension on generated file
# 2013-04-30    Using only fop for transformation
# 2013-05-28    Use xinclude insted of xsl:include (mostly)

# requierments: fop
# usage: ./build_pdf [-h] [-l LANGUAGE] input_file.xml 


# ==========================
# Handle options & arguments
# ==========================

LANGUAGE_STRING="sv"	# default i18n file

# handle options
while getopts "hl:" opt
do
	case $opt in
		h) echo "Usage: build_pdf [-h] [-l LANGUAGE] input_file.xml"
		   exit 1;;
		l) LANGUAGE_STRING=$OPTARG;;
	esac
done

shift $(($OPTIND - 1)) # shift argument to position 1

FILENAME="${1%.*}" # remove file extension from DDI input file

# params for fop
FOP_PARAMS="-param paper.type A4 \
            -param fop1.extensions 1 \
            -param translations ../i18n/$LANGUAGE_STRING.xml"

# ============
# Process file
# ============

# Uncomment when editing the files and debugging
#echo "Preprocessing Xincludes..."
#python3 process_xincludes.py

echo "Using language: $LANGUAGE_STRING"

# transformation with fop/xalan (one step)
fop -xml $1 -xsl dditofo_complete.xsl -pdf $FILENAME.pdf $FOP_PARAMS

# report status
echo "File $FILENAME.pdf generated."
